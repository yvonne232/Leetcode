# Method 1: time complexity O(n); space complexity O(n)
class Solution:
    def countGoodStrings(self, low: int, high: int, zero: int, one: int) -> int:
        MOD = 10 ** 9 + 7
        dp = [0] * (high + 1)
        dp[0] = 1 # one way to build a string of 0

        for i in range(1, high+1):
            if i >= zero:
                dp[i] = (dp[i] + dp[i-zero]) % MOD
            if i >= one:
                dp[i] = (dp[i] + dp[i-one]) % MOD
        
        return sum(dp[i] for i in range(low, high+1)) % MOD
